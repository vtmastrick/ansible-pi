---
- name: create {{ settings.groupname }} group
  group:
    name: "{{ settings.groupname }}"
    gid: "{{ settings.gid }}"
    state: present

- name: create {{ settings.username }} user
  user: 
    name: "{{ settings.username }}"
    uid: "{{ settings.uid }}"
    state: present
    group: "{{ settings.gid }}"

- name: add {{ settings.username }} to docker group
  user:
    name: "{{ settings.username }}"
    groups: docker
    append: yes
   
- name: create directories for {{ settings.username }}
  file:
   path: "{{ item }}"
   state: directory
   owner: "{{ settings.username }}"
   group: "{{ settings.groupname }}"
  with_items:
   - "{{ settings.mnt_dirs }}"
  when: settings.mnt_dirs is defined   

- name: add mounts to fstab {{ settings.username }} #MJS - Fix to add replace
  lineinfile:
   path: /etc/fstab
   line: "{{ item.source }} {{ item.target }} cifs username={{ settings.smb_creds.username }},password={{ settings.smb_creds.password }},iocharset=utf8,uid={{ settings.uid }},gid={{ settings.gid }},file_mode=0755,dir_mode=0755,vers=3.1.1"
   create: yes
  with_items:
    - "{{ settings.smb_mounts }}"
  register: fstab
  when: settings.smb_mounts is defined 

- name: mount all
  command: mount -a
  args:
    warn: no
  when: fstab.changed 

#- name: get docker image {{ settings.image_name }} #MJS - need to update before ansible 2.12
#  docker_image:
#    name: "{{ settings.image_name }}"
#    source: pull
#  register: docker_image
#  when: settings.image_name is defined 

- name: create directories for docker compose {{ settings.service_name }}
  file:
    path: "/{{ settings.docker_dir }}"
    state: directory
    owner: "{{ settings.uid }}"
    group: "{{ settings.gid }}"

- name: copy files to {{ settings.docker_dir }} for {{ settings.service_name }}
  copy: 
    src: "{{ settings.docker_dir }}"
    dest: "/srv/docker"
    owner: "{{ settings.uid }}"
    group: "{{ settings.gid }}"
    remote_src: no
  register: compose_file    

- name: deploy init script for {{ settings.service_name }}
  copy:
    src: "etc/systemd/system/{{ settings.systemd_script }}"
    dest: "/etc/systemd/system/{{ settings.systemd_script }}"
  register: service_file    

- name: enable {{ settings.service_name }} service
  service:
    name: "{{ settings.service_name }}"
    state: restarted
    enabled: yes
    daemon_reload: yes
  when: compose_file.changed or service_file.changed or docker_image.changed

