---
- name: include vault
  include_vars:
    file: vault.yml

- name: remove free unrar
  apt:
    pkg:
      - unrar-free
    state: absent

- name: update repo
  apt_repository:
#   repo='deb-src http://archive.raspbian.org/raspbian wheezy main contrib non-free rpi'
    repo='deb-src http://deb.debian.org/debian/ bullseye main non-free'
    state=present

- name: update cache
  apt:
    update_cache=yes

- name: get unrar source
  apt:
    name: unrar-nonfree
    state: build-dep

- name: build unrar
  shell: mkdir -p /tmp/unrar && cd /tmp/unrar && rm -f /tmp/unrar/* && sudo apt-get source -b unrar-nonfree -y && sudo  dpkg -i unrar*.deb && rm -rf /tmp/unrar/

- name: create directories
  file:
   path: "{{ item }}"
   state: directory
   owner: "{{ dvr_username }}"
   group: "{{ dvr_username }}"
  with_items:
   - '/mnt/nzb'
   - '/opt/etc/nzbget.conf'
   - '/srv/data/'

- name: create symbolic link for downloads
  file:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "{{ dvr_username }}"
   group: "{{ dvr_username }}"
   state: link
  with_items:
   - src : '/mnt/nzb'
     dest : '/srv/data/nzb' 

- name: add mounts to fstab
  lineinfile:
   path: /etc/fstab
   line: "{{ item }}"
   create: yes
  with_items:
   - "//nas02/temp_nzb /mnt/nzb cifs username=nzb,password={{ nzb_creds.password }},iocharset=utf8,uid={{ dvr_username }},gid={{ dvr_username }},file_mode=0755,dir_mode=0755,vers=3.1.1"

- name: mount all
  command: mount -a
  args:
    warn: no

- name: install nzbget
  apt:
    pkg:
      - nzbget
    state: latest
  register: apt_update

- name: copy config file to target
  copy:
    src: etc/nzbget.conf
    dest: ~/nzbget.conf

- name: get cksum of current file
  stat:
    path: /etc/nzbget.conf
  register: currentFile

- name: Current SHA1
  set_fact:
    f1sha1: "{{ currentFile.stat.checksum if currentFile.stat.exists else 0}}"

- name: get cksum of source file
  stat:
    path: ~/nzbget.conf
  register: sourceFile

- name: Source file SHA1
  set_fact:
    f2sha1: "{{ sourceFile.stat.checksum }}"

- name: Config Changed
  set_fact:
    configChanged: "{{ f2sha1 != f1sha1 }}"

- name: replace config if changed
  copy:
    src:  ~/nzbget.conf
    dest: /etc/nzbget.conf
    owner: "{{ dvr_username }}"
    group: "{{ dvr_username }}"  
    remote_src: yes
  when: configChanged|bool

- name: set permissions for config
  file:
    dest: /etc/nzbget.conf
    owner: "{{ dvr_username }}"
    group: "{{ dvr_username }}"

- name: set permissions for nzbget
  file:
    dest: /usr/bin/nzbget
    owner: "{{ dvr_username }}"
    group: "{{ dvr_username }}"
    mode: 0754  

- name: set permissions for nzbget ui
  file:
    dest: /usr/share/nzbget
    owner: "{{ dvr_username }}"
    group: "{{ dvr_username }}"
    mode: 0754
    recurse: yes
   
- name: set permissions for log
  file:
    dest: /var/log/nzbget.log
    owner: "{{ dvr_username }}"
    group: "{{ dvr_username }}"
    mode: 0660
- name: deploy init script
  copy:
    src: etc/systemd/system/nzbget.service
    dest: /etc/systemd/system/nzbget.service

- name: enable nzbget service
  service:
    name: nzbget
    state: restarted
    daemon_reload: yes
    enabled: yes
